# Generated by Django 4.2.2 on 2023-06-25 15:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Artist Name')),
                ('slug_artist', models.SlugField(editable=False, max_length=100, null=True, unique=True, verbose_name='Slug Artist')),
                ('profile_url', models.URLField(default='', unique=True, verbose_name='Profile URL')),
                ('avatar_link', models.ImageField(blank=True, default='media/site/default_logo.png', upload_to='', verbose_name='Avatar')),
                ('verification', models.BooleanField(default=False, editable=False, verbose_name='Verification')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Last Name')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='City')),
                ('country', models.CharField(blank=True, max_length=30, null=True, verbose_name='Country')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='Bio')),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Follower Counter')),
                ('following_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Following Counter')),
                ('track_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Track Counter')),
                ('like_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Like Counter')),
                ('header_link', models.FileField(blank=True, default='site/default_background.jpg', null=True, upload_to='user', verbose_name='Header Cover')),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profile',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Title')),
                ('slug_track', models.SlugField(editable=False, max_length=255, unique=True, verbose_name='Slug Title')),
                ('file_link', models.FileField(upload_to='user', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav'])], verbose_name='File')),
                ('cover_link', models.ImageField(blank=True, default='site/default_logo.png', null=True, upload_to='user', verbose_name='Cover')),
                ('genre', models.CharField(blank=True, max_length=30, null=True, verbose_name='Genre')),
                ('tag', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tag')),
                ('public_access', models.BooleanField(default=False, verbose_name='Public Access')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='Published Date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('discription', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Discription')),
                ('copy_link', models.URLField(default='', editable=False, verbose_name='Copy Link')),
                ('download_access', models.BooleanField(default=False, verbose_name='Download Access')),
                ('buy_link', models.URLField(blank=True, null=True, verbose_name='Buy Link')),
                ('play_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Play Counter')),
                ('like_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Like Counter')),
                ('repost_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Repost Counter')),
                ('comment_counter', models.PositiveIntegerField(default=0, editable=False, verbose_name='Comment Counter')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.profile')),
            ],
            options={
                'verbose_name': 'Track',
                'verbose_name_plural': 'Tracks',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Social Network')),
                ('url', models.URLField(verbose_name='Profile URL')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
            ],
            options={
                'verbose_name': 'Social Network',
                'verbose_name_plural': 'Social Networks',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repost', models.BooleanField(default=False, verbose_name='Repost')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.track')),
            ],
            options={
                'verbose_name': 'Repost',
                'verbose_name_plural': 'Reposts',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False, verbose_name='Like')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.track')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('comment', models.TextField(max_length=2000, verbose_name='Comment')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.track')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ('id',),
            },
        ),
    ]
